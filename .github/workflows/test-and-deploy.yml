name: Build, Tests, and Deploy

on:
  push:
    branches:
      - master
  workflow_dispatch:
permissions:
  contents: read
  pages: write
  id-token: write
concurrency:
  group: "pages"
  cancel-in-progress: false
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16.20.2' 
      - run: npm install -g pnpm@8
      - name: Create pnpm store directory
        run: mkdir -p ~/.pnpm-store
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store 
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: pnpm build
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: ./dist
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16.20.2' 
      - run: npm install -g pnpm@8
      - name: Create pnpm store directory
        run: mkdir -p ~/.pnpm-store
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store 
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: Install dependencies
        run: pnpm install
      - name: Run Vitest tests
        run: pnpm test:vi:run
  end-to-end-tests:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16.20.2"
      - run: npm install -g pnpm@8
      - name: Get current date
        id: date
        run: echo "date=$(date '+%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT
      - name: Create pnpm store directory
        run: mkdir -p ~/.pnpm-store
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: Cache Playwright dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: Install dependencies
        run: pnpm install
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: build
          path: ./dist
      - name: Install Playwright browsers
        run: pnpm test:pw:ci
      - name: Run Playwright tests
        run: pnpm test:pw:run:project ${{ matrix.browser }}
        env:
          BROWSER_NAME: ${{ matrix.browser }}
          TIMESTAMP: ${{ format(steps.date.outputs.date, 'yyyyMMdd-HHmmss') }}
      - uses: actions/upload-artifact@v3
        env:
          BROWSER_NAME: ${{ matrix.browser }}
          TIMESTAMP: ${{ format(steps.date.outputs.date, 'yyyyMMdd-HHmmss') }}
        if: ${{ !cancelled() }}
        with:
          name: playwright-report-${{ env.BROWSER_NAME }}-${{ env.TIMESTAMP }}
          path: playwright-report/
          retention-days: 30
  deploy:
    needs: [build, unit-tests, end-to-end-tests]
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16.20.2' 
      - run: npm install -g pnpm@8
      - name: Create pnpm store directory
        run: mkdir -p ~/.pnpm-store
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store 
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: pnpm build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

